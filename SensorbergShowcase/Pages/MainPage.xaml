<Page
    x:Name="thisPage"
    x:Class="SensorbergShowcase.Pages.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SensorbergShowcase"
    xmlns:controls="using:SensorbergShowcase.Controls"
    xmlns:converters="using:SensorbergShowcase.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InvertValueConverter x:Key="InvertValueConverter" />
        <converters:BoolToScannerStateTextConverter x:Key="ScannerStateTextConverter" />
        <converters:BoolToAdvertisingButtonTextConverter x:Key="AdvertisingButtonTextConverter" />
        <converters:BoolToBackgroundImageSourceConverter x:Key="BackgroundImageSourceConverter" />
        <converters:BoolToColorStringConverter x:Key="BoolToColorStringConverter" />
        
        <!-- Scanner -->
        <DataTemplate x:Key="ScannerDataTemplate">
            <Grid Margin="0,0,0,24">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ListBox
                    x:Name="scannedBeaconsListBox"
                    Background="Transparent"
                    Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                    BorderBrush="Transparent"
                    ItemsSource="{Binding Path=BeaconModel.BeaconDetailsCollection, ElementName=thisPage}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <controls:BeaconDetailsControl Width="{Binding Path=BeaconDetailsControlWidth, ElementName=thisPage}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Grid
                    x:Name="emptyScannerPageInfoGrid"
                    Width="{Binding Path=BeaconDetailsControlWidth, ElementName=thisPage}"
                    Height="50"
                    VerticalAlignment="Center"
                    Visibility="{Binding Path=BeaconsInRange, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        x:Name="scannerStateTextBlock"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{Binding Path=IsScanning, ElementName=thisPage, Converter={StaticResource ScannerStateTextConverter}}" />
                    <ProgressBar
                        x:Name="scannerProgressBar"
                        Grid.Row="1"
                        Margin="0,6,0,0"
                        VerticalAlignment="Top"
                        Background="Transparent"
                        IsIndeterminate="True"
                        Visibility="{Binding Path=IsScanning, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Grid>
            </Grid>
        </DataTemplate>
        
        <!-- Advertise -->
        <DataTemplate x:Key="AdvertiseDataTemplate">
            <Grid MinWidth="320">
                <StackPanel>
                    <TextBlock
                        Margin="0,6,0,0"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        FontWeight="ExtraLight"
                        Text="Beacon UUID" />
                    <TextBox
                        x:Name="beaconId1TextBox"
                        Margin="0,6,0,0"
                        MaxLength="36"
                        Text="{Binding Path=BeaconId1, ElementName=thisPage}"
                        IsEnabled="{Binding Path=IsAdvertisingStarted, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                        TextChanged="OnAdvertisingTextBoxTextChanged" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width=".5*" />
                            <ColumnDefinition Width=".5*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel>
                            <TextBlock
                                Margin="0,12,0,0"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                FontWeight="ExtraLight"
                                Text="Major" />
                            <TextBox
                                x:Name="beaconId2TextBox"
                                Margin="0,6,6,0"
                                InputScope="Number"
                                Text="{Binding Path=BeaconId2, ElementName=thisPage, Mode=TwoWay}"
                                IsEnabled="{Binding Path=IsAdvertisingStarted, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                                TextChanged="OnAdvertisingTextBoxTextChanged" />
                        </StackPanel>
                        <StackPanel Grid.Column="1">
                            <TextBlock
                                Margin="6,12,0,0"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                FontWeight="ExtraLight"
                                Text="Minor" />
                            <TextBox
                                x:Name="beaconId3TextBox"
                                Margin="6,6,0,0"
                                InputScope="Number"
                                Text="{Binding Path=BeaconId3, ElementName=thisPage, Mode=TwoWay}"
                                IsEnabled="{Binding Path=IsAdvertisingStarted, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                                TextChanged="OnAdvertisingTextBoxTextChanged" />
                        </StackPanel>
                    </Grid>
                    <Button
                        x:Name="toggleAdvertisingButton"
                        Margin="0,18,0,0"
                        Click="OnToggleAdvertizingButtonClickedAsync">
                        <Button.Content>
                            <TextBlock
                                x:Name="toggleAdvertisingButtonContent"
                                Style="{ThemeResource SubtitleTextBlockStyle}"
                                Text="{Binding Path=IsAdvertisingStarted, ElementName=thisPage, Converter={StaticResource AdvertisingButtonTextConverter}}" />
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <!-- Settings -->
        <DataTemplate x:Key="SettingsDataTemplate">
            <Grid>
                <ScrollViewer MaxWidth="400">
                    <StackPanel Margin="0,0,12,48">
                        <!-- Actions setting -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".7*" />
                                <ColumnDefinition Width=".3*" />
                            </Grid.ColumnDefinitions>
                            <ProgressBar
                                x:Name="settingsProgressBar"
                                Grid.ColumnSpan="2"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                IsIndeterminate="True"
                                Visibility="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <TextBlock
                                x:Uid="beaconActions"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource TitleTextBlockStyle}" />
                            <ToggleSwitch
                                x:Name="enableActionsSwitch"
                                Grid.Column="1"
                                Margin="0,0,-60,0"
                                HorizontalAlignment="Right"
                                IsOn="{Binding Path=AreActionsEnabled, ElementName=thisPage, Mode=TwoWay}"
                                Toggled="OnEnableActionsSwitchToggled" />
                        </Grid>
                        <Grid Margin="0,-6,0,0"
                              Visibility="{Binding Path=AreActionsEnabled, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock
                                x:Uid="sdkStatusOk"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Opacity="0.8"
                                Foreground="Green"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                TextWrapping="Wrap"
                                Visibility="{Binding Path=IsLayoutValid, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <TextBlock
                                x:Uid="invalidOrMissingLayoutError"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Red"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                TextWrapping="Wrap"
                                Visibility="{Binding Path=IsLayoutValid, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" />
                        </Grid>

                        <!-- Background task settings -->
                        <Grid Margin="0,12,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".7*" />
                                <ColumnDefinition Width=".3*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Uid="backgroundTask"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource TitleTextBlockStyle}" />
                            <ToggleSwitch
                                x:Name="enableBackgroundTaskSwitch"
                                Grid.Column="1"
                                Margin="0,-6,-60,0"
                                HorizontalAlignment="Right"
                                IsOn="{Binding Path=IsBackgroundTaskRegistered, ElementName=thisPage}"
                                Toggled="OnEnableBackgroundTaskSwitchToggledAsync" />
                        </Grid>

                        <!-- API key settings -->
                        <TextBlock
                            x:Uid="apiKey"
                            Margin="0,12,0,0"
                            Style="{ThemeResource TitleTextBlockStyle}" />
                        <TextBlock
                            x:Name="appNameTextBlock"
                            Margin="0,6,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="app name"
                            Visibility="Collapsed" />
                        <TextBlock
                            x:Uid="enterApiKey"
                            Margin="0,6,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            FontWeight="ExtraLight" />
                        <TextBox
                            x:Name="apiKeyTextBox"
                            Margin="0,6,0,0"
                            Text="{Binding Path=ApiKey, ElementName=thisPage}"
                            IsEnabled="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                            TextChanged="OnSettingsTextBoxTextChanged" />
                        <Grid Margin="0,6,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".5*" />
                                <ColumnDefinition Width=".5*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Uid="apiKeyNotValidated"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Red"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                Visibility="{Binding Path=IsApiKeyValid, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" />
                            <TextBlock
                                x:Uid="apiKeyIsValid"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Green"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                Opacity="0.8"
                                Visibility="{Binding Path=IsApiKeyValid, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <Button
                                Grid.Column="1"
                                Margin="0,-3,0,0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                Style="{ThemeResource TextBlockButtonStyle}"
                                IsEnabled="{Binding Path=IsApiKeyValid, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                                Click="OnValidateApiKeyButtonClicked">
                                <Button.Content>
                                    <TextBlock
                                        x:Uid="validateApiKey"
                                        Style="{ThemeResource BodyTextBlockStyle}" />
                                </Button.Content>
                            </Button>
                        </Grid>
                        <StackPanel Visibility="{Binding IsScannerAvailable, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock
                                x:Uid="or"
                                Margin="0,12,0,0"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                HorizontalAlignment="Center" />
                            <Button x:Name="scanApiKeyButton"
                                    Margin="0,6,0,0"
                                    HorizontalAlignment="Center"
                                    IsEnabled="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                                    Click="OnScanApiQrCodeButtonClicked">
                                <Button.Content>
                                    <TextBlock
                                        x:Uid="scanApiKeyFromQrCode"
                                        Style="{ThemeResource SubtitleTextBlockStyle}" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <TextBlock
                            x:Uid="or"
                            Margin="0,12,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            HorizontalAlignment="Center" />
                        <TextBlock
                            x:Uid="email"
                            Margin="0,6,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            FontWeight="ExtraLight" />
                        <TextBox
                            x:Name="emailTextBox"
                            Margin="0,6,0,0"
                            Text="{Binding Path=Email, ElementName=thisPage}"
                            IsEnabled="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                            TextChanged="OnSettingsTextBoxTextChanged" />
                        <TextBlock
                            x:Uid="password"
                            Margin="0,12,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            FontWeight="ExtraLight" />
                        <PasswordBox
                            x:Name="passwordBox"
                            Margin="0,6,0,0"
                            Password="{Binding Path=Password, ElementName=thisPage}"
                            IsEnabled="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                            PasswordChanged="OnPasswordBoxPasswordChanged" />
                        <Button
                            x:Name="fetchApiKeyButton"
                            Margin="0,18,0,0"
                            IsEnabled="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                            Click="OnFetchApiKeyButtonClickedAsync">
                            <Button.Content>
                                <TextBlock
                                    x:Uid="fetchApiKey"
                                    Style="{ThemeResource SubtitleTextBlockStyle}" />
                            </Button.Content>
                        </Button>
                        <Button
                            Margin="-6,18,0,0"
                            Background="Transparent"
                            Style="{ThemeResource TextBlockButtonStyle}"
                            IsEnabled="{Binding Path=IsValidatingOrFetchingApiKey, ElementName=thisPage, Converter={StaticResource InvertValueConverter}}"
                            Click="OnResetToDemoApiKeyButtonClicked">
                            <Button.Content>
                                <TextBlock
                                    x:Uid="resetToDemoApiKey"
                                    Style="{ThemeResource BodyTextBlockStyle}" />
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </DataTemplate>        
    </Page.Resources>

    <Grid x:Name="layoutGrid">
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.Background>
            <ImageBrush
                Stretch="UniformToFill"
                ImageSource="{Binding Path=IsBigScreen, ElementName=thisPage, Converter={StaticResource BackgroundImageSourceConverter}}" />
        </Grid.Background>

        <!-- Hub is used on big screens -->
        <Hub
            x:Name="hub"
            MinWidth="1200"
            Background="{ThemeResource AppBarBackgroundThemeBrush}"
            Visibility="{Binding Path=IsBigScreen, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}">
            <Hub.Header>
                <Grid Visibility="{Binding Path=IsBigScreen, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock
                        x:Name="pageTitle"
                        x:Uid="sensorbergShowcase"
                        VerticalAlignment="Top"
                        Style="{StaticResource HeaderTextBlockStyle}"
                        IsHitTestVisible="false"
                        TextWrapping="NoWrap" />
                </Grid>
            </Hub.Header>
            <HubSection Width="400" ContentTemplate="{StaticResource ScannerDataTemplate}">
                <HubSection.Header>
                    <TextBlock
                        Style="{StaticResource SubheaderTextBlockStyle}"
                        Text="{Binding Path=HeaderWithBeaconCount, ElementName=thisPage}" />
                </HubSection.Header>
            </HubSection>
            <HubSection ContentTemplate="{StaticResource AdvertiseDataTemplate}">
                <HubSection.Header>
                    <TextBlock
                        x:Uid="advertise"
                        Style="{StaticResource SubheaderTextBlockStyle}" />
                </HubSection.Header>
            </HubSection>
            <HubSection ContentTemplate="{StaticResource SettingsDataTemplate}">
                <HubSection.Header>
                    <TextBlock
                        x:Uid="settings"
                        Style="{StaticResource SubheaderTextBlockStyle}" />
                </HubSection.Header>
            </HubSection>
        </Hub>

        <!-- Pivot is used on smaller screen (phones) -->
        <Pivot
            x:Name="pivot"
            Background="{ThemeResource AppBarBackgroundThemeBrush}"
            Visibility="{Binding Path=IsBigScreen, ElementName=thisPage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}">
            <PivotItem ContentTemplate="{StaticResource ScannerDataTemplate}">
                <PivotItem.Header>
                    <TextBlock
                        Style="{StaticResource SubheaderTextBlockStyle}"
                        Text="{Binding Path=HeaderWithBeaconCount, ElementName=thisPage}" />
                </PivotItem.Header>
            </PivotItem>
            <PivotItem ContentTemplate="{StaticResource AdvertiseDataTemplate}">
                <PivotItem.Header>
                    <TextBlock
                        x:Uid="advertise"
                        Style="{StaticResource SubheaderTextBlockStyle}" />
                </PivotItem.Header>
            </PivotItem>
            <PivotItem ContentTemplate="{StaticResource SettingsDataTemplate}">
                <PivotItem.Header>
                    <TextBlock
                        x:Uid="settings"
                        Style="{StaticResource SubheaderTextBlockStyle}" />
                </PivotItem.Header>
            </PivotItem>
        </Pivot>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton
                x:Name="checkStatusButton"
                x:Uid="checkStatus"
                Foreground="{Binding Path=IsLayoutValid, ElementName=thisPage, Converter={StaticResource BoolToColorStringConverter}, ConverterParameter='Green,Red'}"
                Icon="Repair"
                Click="OnCheckStatusButtonClickedAsync" />
            <AppBarToggleButton
                x:Name="toggleScanButton"
                x:Uid="toggleScanner"
                Icon="Play"
                IsChecked="True"
                Click="OnToggleScanButtonClickedAsync" />
        </CommandBar>
    </Page.BottomAppBar>
</Page>

