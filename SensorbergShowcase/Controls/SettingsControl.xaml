<UserControl
    x:Class="SensorbergShowcase.Controls.SettingsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SensorbergShowcase.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:SensorbergSDK.Internal.Data"
    xmlns:converters="using:SensorbergShowcase.Converters"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InvertValueConverter x:Key="InvertValueConverter" />
    </UserControl.Resources>

    <Grid>
        <ScrollViewer MaxWidth="400">
            <StackPanel Margin="0,0,12,48">
                <!-- Actions setting -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".7*" />
                        <ColumnDefinition Width=".3*" />
                    </Grid.ColumnDefinitions>
                    <ProgressBar
                                x:Name="settingsProgressBar"
                                Grid.ColumnSpan="2"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                IsIndeterminate="True"
                                Visibility="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <TextBlock
                                x:Uid="beaconActions"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource TitleTextBlockStyle}" />
                    <ToggleSwitch
                                x:Name="enableActionsSwitch"
                                Grid.Column="1"
                                Margin="0,0,-60,0"
                                HorizontalAlignment="Right"
                                IsOn="{x:Bind Model.AreActionsEnabled, Mode=TwoWay}"
                                Toggled="OnEnableActionsSwitchToggled" />
                </Grid>
                <Grid Margin="0,-6,0,0"
                              Visibility="{x:Bind Model.AreActionsEnabled,  Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock
                                x:Uid="sdkStatusOk"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Opacity="0.8"
                                Foreground="Green"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                TextWrapping="Wrap"
                                Visibility="{x:Bind Model.IsLayoutValid, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <TextBlock
                                x:Uid="invalidOrMissingLayoutError"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Red"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                TextWrapping="Wrap"
                                Visibility="{x:Bind Model.IsLayoutValid, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" />
                </Grid>

                <!-- Background task settings -->
                <Grid Margin="0,12,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".7*" />
                        <ColumnDefinition Width=".3*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                                x:Uid="backgroundTask"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource TitleTextBlockStyle}" />
                    <ToggleSwitch
                                x:Name="enableBackgroundTaskSwitch"
                                Grid.Column="1"
                                Margin="0,-6,-60,0"
                                HorizontalAlignment="Right"
                                IsOn="{x:Bind Model.ShouldRegisterBackgroundTask, Mode=TwoWay}"
                                Toggled="OnEnableBackgroundTaskSwitchToggledAsync" />
                </Grid>
                <Grid Margin="0,-6,0,0"
                              Visibility="{x:Bind Model.ShouldRegisterBackgroundTask, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock
                                x:Uid="bgTaskStatusOk"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Opacity="0.8"
                                Foreground="Green"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                TextWrapping="Wrap"
                                Visibility="{x:Bind Model.IsBackgroundTaskRegistered, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <TextBlock
                                x:Uid="bgTaskStatusNotRegistered"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Red"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                TextWrapping="Wrap"
                                Visibility="{x:Bind Model.IsBackgroundTaskRegistered, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" />
                </Grid>

                <!-- API key settings -->
                <TextBlock
                            x:Uid="apiKey"
                            Margin="0,12,0,0"
                            Style="{ThemeResource TitleTextBlockStyle}" />
                <TextBlock
                            x:Name="appNameTextBlock"
                            Margin="0,6,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Text="app name"
                            Visibility="Collapsed" />
                <TextBlock
                            x:Uid="enterApiKey"
                            Margin="0,6,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            FontWeight="ExtraLight" />
                <TextBox
                            x:Name="apiKeyTextBox"
                            Margin="0,6,0,0"
                            Text="{x:Bind Model.ApiKey, Mode=OneWay}"
                            IsEnabled="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                            TextChanged="OnSettingsTextBoxTextChanged" />
                <Grid Margin="0,6,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*" />
                        <ColumnDefinition Width=".5*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                                x:Uid="apiKeyNotValidated"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Red"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                Visibility="{x:Bind Model.IsApiKeyValid, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" />
                    <TextBlock
                                x:Uid="apiKeyIsValid"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="Green"
                                FontWeight="ExtraLight"
                                FontStyle="Italic"
                                Opacity="0.8"
                                Visibility="{x:Bind Model.IsApiKeyValid, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Button
                                Grid.Column="1"
                                Margin="0,-3,0,0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                Style="{ThemeResource TextBlockButtonStyle}"
                                IsEnabled="{x:Bind Model.IsApiKeyValid, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                                Click="OnValidateApiKeyButtonClicked">
                        <Button.Content>
                            <TextBlock
                                        x:Uid="validateApiKey"
                                        Style="{ThemeResource BodyTextBlockStyle}" />
                        </Button.Content>
                    </Button>
                </Grid>
                <StackPanel Visibility="{x:Bind Model.IsScannerAvailable, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock
                                x:Uid="or"
                                Margin="0,12,0,0"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                HorizontalAlignment="Center" />
                    <Button x:Name="scanApiKeyButton"
                                    Margin="0,6,0,0"
                                    HorizontalAlignment="Center"
                                    IsEnabled="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                                    Click="OnScanApiQrCodeButtonClicked">
                        <Button.Content>
                            <TextBlock
                                        x:Uid="scanApiKeyFromQrCode"
                                        Style="{ThemeResource SubtitleTextBlockStyle}" />
                        </Button.Content>
                    </Button>
                </StackPanel>
                <TextBlock
                            x:Uid="or"
                            Margin="0,12,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            HorizontalAlignment="Center" />
                <TextBlock
                            x:Uid="email"
                            Margin="0,6,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            FontWeight="ExtraLight" />
                <TextBox
                            x:Name="emailTextBox"
                            Margin="0,6,0,0"
                            Text="{x:Bind Model.Email}"
                            IsEnabled="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                            TextChanged="OnSettingsTextBoxTextChanged" />
                <TextBlock
                            x:Uid="password"
                            Margin="0,12,0,0"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            FontWeight="ExtraLight" />
                <PasswordBox
                            x:Name="passwordBox"
                            Margin="0,6,0,0"
                            Password="{x:Bind Model.Password}"
                            IsEnabled="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                            PasswordChanged="OnPasswordBoxPasswordChanged" />
                <Button
                            x:Name="fetchApiKeyButton"
                            Margin="0,18,0,0"
                            IsEnabled="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                            Click="OnFetchApiKeyButtonClickedAsync">
                    <Button.Content>
                        <TextBlock
                                    x:Uid="fetchApiKey"
                                    Style="{ThemeResource SubtitleTextBlockStyle}" />
                    </Button.Content>
                </Button>
                <Button
                            Margin="-6,18,0,0"
                            Background="Transparent"
                            Style="{ThemeResource TextBlockButtonStyle}"
                            IsEnabled="{x:Bind Model.IsValidatingOrFetchingApiKey, Mode=OneWay, Converter={StaticResource InvertValueConverter}}"
                            Click="OnResetToDemoApiKeyButtonClicked">
                    <Button.Content>
                        <TextBlock
                                    x:Uid="resetToDemoApiKey"
                                    Style="{ThemeResource BodyTextBlockStyle}" />
                    </Button.Content>
                </Button>
                <StackPanel Margin="10" Visibility="{x:Bind Model.ShowApiKeySelection, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="Select the application to use:"/>
                    <ComboBox Name="appCombobox" ItemsSource="{x:Bind Model.Applications}" SelectedItem="{Binding Model.Application, Mode=TwoWay}" Margin="0,10,0,0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="data:SensorbergApplication">
                                <TextBlock Text="{x:Bind AppName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
